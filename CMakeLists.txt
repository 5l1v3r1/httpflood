cmake_minimum_required(VERSION 2.6)
project(HTTPFlood)

set(PROJECT_VERSION_MAJOR 1)
set(PROJECT_VERSION_MINOR 1)
set(PROJECT_VERSION_PATCH 0)
set(PROJECT_COPYRIGHT "Copyright (C) 2010 Christian Mayer <http://fox21.at>")
set(PROJECT_DEFINE_ARGC_MIN 3)
set(SEND 1)

set(CMAKE_C_FLAGS "-Wall")
set(CMAKE_C_FLAGS_DEBUG "-g -O0 -DDEBUG")
set(CMAKE_C_FLAGS_RELEASE "-O3")
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/bin)

if(SEND)
	set(PROJECT_DEFINE_SEND "#define SEND")
endif()
configure_file("${PROJECT_SOURCE_DIR}/src/config.h.in" "${PROJECT_BINARY_DIR}/src/config.h")

file(GLOB_RECURSE PROJECT_SOURCES "src/*.c")

set(PROJECT_INCLUDE_DIRS "")
foreach(_srcFile ${PROJECT_SOURCES})
	get_filename_component(_dir ${_srcFile} PATH)
	list(APPEND PROJECT_INCLUDE_DIRS ${_dir})
endforeach()
list(REMOVE_DUPLICATES PROJECT_INCLUDE_DIRS)

include_directories(${PROJECT_INCLUDE_DIRS})
include_directories("${PROJECT_BINARY_DIR}/src")

add_executable(httpflood ${PROJECT_SOURCES})

add_executable(httpflood_test tests/httpflood_test.c)



enable_testing()

add_test(NAME StdRuns COMMAND httpflood)
set_tests_properties(StdRuns PROPERTIES WILL_FAIL true)

add_test(NAME TestRuns COMMAND httpflood_test)


MESSAGE("")

MESSAGE(STATUS "PROJECT_NAME: '${PROJECT_NAME}'")
MESSAGE(STATUS "PROJECT_SOURCE_DIR: '${PROJECT_SOURCE_DIR}'")
MESSAGE(STATUS "PROJECT_BINARY_DIR: '${PROJECT_BINARY_DIR}'")
MESSAGE("")

MESSAGE(STATUS "CMAKE_C_COMPILER: '${CMAKE_C_COMPILER}'")
MESSAGE(STATUS "CMAKE_C_FLAGS: '${CMAKE_C_FLAGS}'")
MESSAGE(STATUS "CMAKE_SHARED_LINKER_FLAGS: '${CMAKE_SHARED_LINKER_FLAGS}'")
MESSAGE("")

MESSAGE(STATUS "PROJECT_SOURCES: '${PROJECT_SOURCES}'")
MESSAGE(STATUS "PROJECT_INCLUDE_DIRS: '${PROJECT_INCLUDE_DIRS}'")
MESSAGE("")
